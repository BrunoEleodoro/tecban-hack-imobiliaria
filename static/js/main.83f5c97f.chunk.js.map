{"version":3,"sources":["logo.svg","pages/Login.js","pages/AddressForm.js","pages/PaymentForm.js","pages/Review.js","pages/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","LoginPage","classes","history","useHistory","useLocation","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","onClick","push","Box","mt","AddressForm","Fragment","gutterBottom","PaymentForm","helperText","products","desc","price","addresses","payments","detail","listItem","padding","total","fontWeight","title","Review","List","disablePadding","map","product","ListItem","key","ListItemText","primary","join","direction","payment","appBar","position","layout","marginLeft","marginRight","breakpoints","up","marginBottom","stepper","buttons","justifyContent","button","steps","Checkout","React","useState","activeStep","setActiveStep","AppBar","Toolbar","noWrap","Stepper","Step","StepLabel","length","step","Error","getStepContent","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83f5c97f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Cobertura\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://images.pexels.com/photos/313691/pexels-photo-313691.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Autenticar\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Lembrar\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={() => {\n                                history.push('/home');\n                            }}\n                        >\n                            Fazer Login\n            </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Esqueceu a senha?\n                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {\"Nao tem conta? Inscreva-se\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function AddressForm() {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Cobertura\n      </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        label=\"First name\"\n                        fullWidth\n                        autoComplete=\"given-name\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        label=\"Last name\"\n                        fullWidth\n                        autoComplete=\"family-name\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"address1\"\n                        name=\"address1\"\n                        label=\"Address line 1\"\n                        fullWidth\n                        autoComplete=\"shipping address-line1\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id=\"address2\"\n                        name=\"address2\"\n                        label=\"Address line 2\"\n                        fullWidth\n                        autoComplete=\"shipping address-line2\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"city\"\n                        name=\"city\"\n                        label=\"City\"\n                        fullWidth\n                        autoComplete=\"shipping address-level2\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"zip\"\n                        name=\"zip\"\n                        label=\"Zip / Postal code\"\n                        fullWidth\n                        autoComplete=\"shipping postal-code\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"country\"\n                        name=\"country\"\n                        label=\"Country\"\n                        fullWidth\n                        autoComplete=\"shipping country\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n                        label=\"Use this address for payment details\"\n                    />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function PaymentForm() {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Payment method\n      </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        required\n                        id=\"cardNumber\"\n                        label=\"Card number\"\n                        fullWidth\n                        autoComplete=\"cc-number\"\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        required\n                        id=\"cvv\"\n                        label=\"CVV\"\n                        helperText=\"Last three digits on signature strip\"\n                        fullWidth\n                        autoComplete=\"cc-csc\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n                        label=\"Remember credit card details for next time\"\n                    />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n    { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\n    { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n    { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n    { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n    { name: 'Shipping', desc: '', price: 'Free' },\n];\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n    { name: 'Card type', detail: 'Visa' },\n    { name: 'Card holder', detail: 'Mr John Smith' },\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n    { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n        padding: theme.spacing(1, 0),\n    },\n    total: {\n        fontWeight: 700,\n    },\n    title: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Review() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Order summary\n      </Typography>\n            <List disablePadding>\n                {products.map((product) => (\n                    <ListItem className={classes.listItem} key={product.name}>\n                        <ListItemText primary={product.name} secondary={product.desc} />\n                        <Typography variant=\"body2\">{product.price}</Typography>\n                    </ListItem>\n                ))}\n                <ListItem className={classes.listItem}>\n                    <ListItemText primary=\"Total\" />\n                    <Typography variant=\"subtitle1\" className={classes.total}>\n                        $34.06\n          </Typography>\n                </ListItem>\n            </List>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                        Shipping\n          </Typography>\n                    <Typography gutterBottom>John Smith</Typography>\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\n                </Grid>\n                <Grid item container direction=\"column\" xs={12} sm={6}>\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                        Payment details\n          </Typography>\n                    <Grid container>\n                        {payments.map((payment) => (\n                            <React.Fragment key={payment.name}>\n                                <Grid item xs={6}>\n                                    <Typography gutterBottom>{payment.name}</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography gutterBottom>{payment.detail}</Typography>\n                                </Grid>\n                            </React.Fragment>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Cobertura\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\n\nfunction getStepContent(step) {\n    switch (step) {\n        case 0:\n            return <AddressForm />;\n        case 1:\n            return <PaymentForm />;\n        case 2:\n            return <Review />;\n        default:\n            throw new Error('Unknown step');\n    }\n}\n\nexport default function Checkout() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        Cobertura\n          </Typography>\n                </Toolbar>\n            </AppBar>\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                        Checkout\n          </Typography>\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <React.Fragment>\n                        {activeStep === steps.length ? (\n                            <React.Fragment>\n                                <Typography variant=\"h5\" gutterBottom>\n                                    Thank you for your order.\n                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\n                                    send you an update when your order has shipped.\n                </Typography>\n                            </React.Fragment>\n                        ) : (\n                                <React.Fragment>\n                                    {getStepContent(activeStep)}\n                                    <div className={classes.buttons}>\n                                        {activeStep !== 0 && (\n                                            <Button onClick={handleBack} className={classes.button}>\n                                                Back\n                                            </Button>\n                                        )}\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </React.Fragment>\n                            )}\n                    </React.Fragment>\n                </Paper>\n                <Copyright />\n            </main>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport LoginPage from './pages/Login';\nimport { Checkbox } from '@material-ui/core';\nimport Checkout from './pages/Checkout';\n\nfunction App() {\n  return (\n    <Router>\n\n      <Switch>\n        <Route path=\"/home\">\n          <Checkout />\n        </Route>\n        <Route path=\"/\">\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}